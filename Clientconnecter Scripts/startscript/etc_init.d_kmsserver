#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: KMSServer
# Description:       Simulates a KMSServer for Windows and Office Activation
### END INIT INFO
# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOME=/root
PWD=$HOME

DESC="KMSServer for Windows and MS Office"
NAME=kmsserver
DAEMON_PATH=/srv/py-kms
DAEMON=$DAEMON_PATH/server.py
SCRIPTNAME=/etc/init.d/$NAME

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    OPT_ARGS=""
    if [ "$LOGLEVEL" != "" ] ; then
        OPT_ARGS="$OPT_ARGS --loglevel $LOGLEVEL"
    fi
    if [ "$LOGFILE" != "" ] ; then
        OPT_ARGS="$OPT_ARGS --logfile $LOGFILE"
    fi

    cd $DAEMON_PATH
    /usr/bin/python $DAEMON $LISTENIP $PORT $OPT_ARGS &
}

if [ "$START" != "yes" ] ; then
    exit 0
fi

case "$1" in
        start)
        log_daemon_msg "Starting $DESC" "$NAME"
            do_start
        ;;
        stop)
        PID=$(ps aux|grep $LOGFILE|grep server.py|grep $PORT|grep -v grep|awk '{print $2}')
        kill $PID
                ;;
        *)
        echo "Usage: $SCRIPTNAME {start|stop}" >&2
        exit 3
        ;;
esac

:

